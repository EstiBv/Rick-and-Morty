{"version":3,"sources":["services/api.js","images/Rick_and_Morty.svg","components/Loader.js","components/Header.js","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","components/Footer.js","components/App.js","index.js"],"names":["getDataApi","fetch","then","response","json","data","results","catch","error","console","log","loader","className","header","props","src","title","alt","isLoading","Loader","characterCard","to","id","img","name","species","defaultProps","characterList","charactersData","characters","map","item","image","length","filter","onSubmit","ev","preventDefault","htmlFor","type","onChange","handleInputChange","target","value","textInput","placeholder","characterDetails","origin","episode","status","episodes","footer","App","useState","setCharacters","setTextInput","setLoading","useEffect","filteredCharacter","toUpperCase","includes","Fragment","Header","exact","path","inputValue","CharacterList","component","renderDetail","foundIdRouteCharacter","parseInt","match","params","foundCharacter","find","character","foundCharacterId","characterDetail","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b99165b.chunk.js","sourcesContent":["const getDataApi = () => {\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\n    .then((response) => response.json())\n    .then((data) => {\n      // chosen exact data\n      return data.results;\n    })\n    .catch((error) => console.log(\"Ha sucedido un error\"));\n};\nexport default getDataApi;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty.68105813.svg\";","import \"../stylesheets/App.scss\";\n\nconst loader = () => {\n  return <div className=\"isLoading\"></div>;\n};\nexport default loader;\n","import PropTypes from \"prop-types\";\nimport \"../stylesheets/App.scss\";\nimport title from \"../images/Rick_and_Morty.svg\";\nimport Loader from \"./Loader\";\n\nconst header = (props) => {\n  return (\n    <div className=\"container__title \">\n      <img src={title} alt=\"Rick and Morty\" className=\"container__title--img\" />\n      <div>{props.isLoading === true ? <Loader /> : null}</div>\n    </div>\n  );\n};\n\nheader.propTypes = {\n  title: PropTypes.string,\n};\nexport default header;\n","import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/CharacterCard.scss\";\n\nconst characterCard = (props) => {\n  return (\n    <Link to={`/character/${props.id}`} className=\"link-card\">\n      <article className=\"card\">\n        <img\n          src={props.img}\n          alt={\"Picture \" + props.name}\n          className=\"card__img\"\n        />\n        <h5 className=\"card__title\">{props.name}</h5>\n        <p className=\"card__type\">{props.species}</p>\n      </article>\n    </Link>\n  );\n};\n\ncharacterCard.propTypes = {\n  id: PropTypes.number,\n  img: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};\n\ncharacterCard.defaultProps = {\n  name: \"Rick and Morty character\",\n  species: \"Undefined species\",\n  img: \"Image not found\",\n};\n\nexport default characterCard;\n","import CharacterCard from \"./CharacterCard\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/App.scss\";\n\nconst characterList = (props) => {\n  const charactersData = props.characters.map((item) => {\n    return (\n      <li key={item.id} className=\"card__item\">\n        <CharacterCard\n          id={item.id}\n          name={item.name}\n          species={item.species}\n          img={item.image}\n        />\n      </li>\n    );\n  });\n  if (charactersData.length !== 0) {\n    return <ul className=\"card__list\">{charactersData}</ul>;\n  } else {\n    return <p className=\"not-character\"> Nobody exists on purpose</p>;\n  }\n};\n\ncharacterList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};\n\nexport default characterList;\n","import \"../stylesheets/Filters.scss\";\n\nconst filter = (props) => {\n  // Lifting input\n  const handleInput = (ev) => {\n    props.handleInputChange(ev.target.value);\n  };\n  // Prevent submit form\n  const handleFormSubmit = (ev) => {\n    ev.preventDefault();\n    console.log(ev.preventDefault(), \"default\");\n  };\n  return (\n    <form className=\"form\" onSubmit={handleFormSubmit}>\n      <label htmlFor=\"filter\">Find your favorites!</label>\n      <input\n        type=\"text\"\n        name=\"text\"\n        id=\"filter\"\n        onChange={handleInput}\n        value={props.textInput}\n        className=\"form__input iconSearch \"\n        placeholder=\"Enter your search\"\n      />\n    </form>\n  );\n};\nexport default filter;\n","import PropTypes from \"prop-types\";\nimport \"../stylesheets/CharacterDetail.scss\";\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/App.scss\";\n\nconst characterDetails = (props) => {\n  return (\n    <article key={props.id} className=\"card-detail\">\n      <Link to=\"/\" className=\"link-return\">\n        Return\n      </Link>\n      <h2 className=\"card-detail__title\">{props.name}</h2>\n      <div className=\"card-detail__container\">\n        <img\n          src={props.image}\n          alt={\"Picture \" + props.name}\n          className=\"card-detail__container--img img\"\n        />\n        <ul className=\"card-detail__container--list\">\n          <li className>Species: {props.species}</li>\n          <li>\n            Planet:{\" \"}\n            {props.origin === \"unknown\" ? <span>🤷‍♀️</span> : props.origin}\n          </li>\n          <li>Episodes: {props.episode}</li>\n          <li>\n            Status: {props.status === \"Dead\" ? <span>🎚</span> : props.status}{\" \"}\n          </li>\n        </ul>\n      </div>\n    </article>\n  );\n};\n\ncharacterDetails.propTypes = {\n  id: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string,\n  species: PropTypes.string,\n  origin: PropTypes.string,\n  episode: PropTypes.number,\n  status: PropTypes.string,\n};\n\ncharacterDetails.defaultProps = {\n  name: \"Rick and Morty character\",\n  species: \"Undefined species\",\n  origin: \"Unknown origin\",\n  episodes: \"Suspicious infiltrator\",\n  status: \"Wanted, dead or alive\",\n  img: \"Image not found\",\n};\n\nexport default characterDetails;\n","import \"../stylesheets/Footer.scss\";\nconst footer = () => {\n  return (\n    <small className=\"footer__copy\">\n      ⚙️ by Llilles with <span>🤍</span>\n    </small>\n  );\n};\nexport default footer;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataApi from \"../services/api\";\nimport Header from \"./Header\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetails from \"./CharacterDetail\";\nimport Footer from \"./Footer\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  // State\n  const [characters, setCharacters] = useState([]);\n  const [textInput, setTextInput] = useState(\"\");\n  const [isLoading, setLoading] = useState(false);\n\n  // Api - component mounted -\n  useEffect(() => {\n    setLoading(true);\n    getDataApi().then((data) => {\n      setCharacters(data);\n      setLoading(false);\n    });\n  }, []);\n\n  // Events >>  handleInput\n  const handleInputChange = (inputValue) => {\n    setTextInput(inputValue);\n  };\n\n  // >> filter Characteres\n  const filteredCharacter = characters.filter((item) => {\n    return item.name.toUpperCase().includes(textInput.toUpperCase());\n  });\n\n  //>> render Detail\n\n  const renderDetail = (props) => {\n    const foundIdRouteCharacter = parseInt(props.match.params.id);\n    const foundCharacter = characters.find((character) => {\n      let foundCharacterId = character.id;\n      if (foundIdRouteCharacter === foundCharacterId) {\n        return true;\n      } else return false;\n    });\n\n    if (foundCharacter) {\n      return (\n        <CharacterDetails\n          characterDetail={renderDetail}\n          name={foundCharacter.name}\n          species={foundCharacter.species}\n          origin={foundCharacter.origin.name}\n          episode={foundCharacter.episode.length}\n          image={foundCharacter.image}\n          status={foundCharacter.status}\n        />\n      );\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <main className=\"main\">\n        <div className=\"container\">\n          <Header isLoading={isLoading} />\n        </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              handleInputChange={handleInputChange}\n              textInput={textInput}\n            />\n            <CharacterList characters={filteredCharacter} />\n          </Route>\n          <Route path=\"/character/:id\" component={renderDetail} />\n        </Switch>\n      </main>\n      <footer className=\"footer\">\n        <Footer />\n      </footer>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}